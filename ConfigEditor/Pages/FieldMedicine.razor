@page "/FieldMedicine"
@using ConfigEditor.Core.Config
@using ConfigEditor.Core.Models

<MudGrid>
    <MudItem xs="6">
        <MudSwitch
            Class="d-flex align-center justify-center mud-width-full py-8"
            @bind-Value="Enabled" 
            Label="Enabled"
            Color="Color.Success"/>
    </MudItem>

    <MudItem xs="6">
        <MudNumericField
            @bind-Value="XpPerAction"
            Label="XP Per Action"
            Variant="Variant.Filled"
            Step=".05M"
            Min="0" Max="25"/>
    </MudItem>
    
    <MudItem xs="6">
        <MudNumericField
            @bind-Value="SkillBonus"
            Label="Skill Bonus"
            Variant="Variant.Filled"
            Step=".05M"
            Min="0" Max="1"/>
    </MudItem>

    <MudItem xs="6">
        <MudNumericField
            @bind-Value="SkillBonusElite"
            Label="Skill Bonus Elite"
            Variant="Variant.Filled"
            Step=".05M"
            Min="0" Max="1"/>
    </MudItem>
    
    <MudItem xs="6">
        <MudNumericField
            @bind-Value="DurationBonus"
            Label="Duration Bonus"
            Variant="Variant.Filled"
            Step=".05M"
            Min="0" Max="1"/>
    </MudItem>
    
    <MudItem xs="6">
        <MudNumericField
            @bind-Value="DurationBonusElite"
            Label="Duration Bonus Elite"
            Variant="Variant.Filled"
            Step=".05M"
            Min="0" Max="1"/>
    </MudItem>

    <MudItem xs="6">
        <MudNumericField
            @bind-Value="PositiveEffectBonus"
            Label="Positive Effect Bonus"
            Variant="Variant.Filled"
            Step=".05M"
            Min="0" Max="1"/>
    </MudItem>

    <MudItem xs="6">
        <MudNumericField
            @bind-Value="PositiveEffectBonusElite"
            Label="Positive Effect Bonus Elite"
            Variant="Variant.Filled"
            Step=".05M"
            Min="0" Max="1"/>
    </MudItem>
</MudGrid>

@code {
    static FieldMedicineData Data => ConfigProvider.SkillsConfig.FieldMedicine;
    
    static bool Enabled
    {
        get => Data.Enabled;
        set => Data.Enabled = value;
    }
    
    static decimal XpPerAction
    {
        get => (decimal)Data.FieldMedicineXpPerAction;
        set => Data.FieldMedicineXpPerAction = (float)value;
    }
    
    static decimal SkillBonus
    {
        get => (decimal)Data.SkillBonus;
        set => Data.SkillBonus = (float)value;
    }
    
    static decimal SkillBonusElite
    {
        get => (decimal)Data.SkillBonusElite;
        set => Data.SkillBonusElite = (float)value;
    }
    
    static decimal DurationBonus
    {
        get => (decimal)Data.DurationBonus;
        set => Data.DurationBonus = (float)value;
    }
    
    static decimal DurationBonusElite
    {
        get => (decimal)Data.DurationBonusElite;
        set => Data.DurationBonusElite = (float)value;
    }
    
    static decimal PositiveEffectBonus
    {
        get => (decimal)Data.PositiveEffectChanceBonus;
        set => Data.PositiveEffectChanceBonus = (float)value;
    }
    
    static decimal PositiveEffectBonusElite
    {
        get => (decimal)Data.PositiveEffectChanceBonusElite;
        set => Data.PositiveEffectChanceBonusElite = (float)value;
    }
}