@page "/ProneMovement"
@using ConfigEditor.Core.Config
@using ConfigEditor.Core.Models
<MudGrid>
    <MudItem xs="6">
        <MudSwitch
            Class="d-flex align-center justify-center mud-width-full py-8"
            @bind-Value="Enabled"
            Label="Enabled"
            Color="Color.Success"/>
    </MudItem>

    <MudItem xs="6">
        <MudNumericField
            @bind-Value="XpPerAction"
            Label="XP Per Action"
            Variant="Variant.Filled"
            Step=".05M"
            Min="0" Max="25"/>
    </MudItem>
    
    <MudItem xs="6">
        <MudNumericField
            @bind-Value="SpeedIncrease"
            Label="Movement Speed Increase"
            Variant="Variant.Filled"
            Step=".05M"
            Min="0" Max="1"/>
    </MudItem>

    <MudItem xs="6">
        <MudNumericField
            @bind-Value="SpeedIncreaseElite"
            Label="Movement Speed Increase Elite"
            Variant="Variant.Filled"
            Step=".05M"
            Min="0" Max="1"/>
    </MudItem>

    <MudItem xs="6">
        <MudNumericField
            @bind-Value="VolumeDecrease"
            Label="Volume Decrease"
            Variant="Variant.Filled"
            Step=".05M"
            Min="0" Max="1"/>
    </MudItem>

    <MudItem xs="6">
        <MudNumericField
            @bind-Value="VolumeDecreaseElite"
            Label="Volume Decrease Elite"
            Variant="Variant.Filled"
            Step=".05M"
            Min="0" Max="1"/>
    </MudItem>
</MudGrid>

@code
{
    static ProneMovementData Data => ConfigProvider.SkillsConfig.ProneMovement;
    
    static bool Enabled
    {
        get => Data.Enabled;
        set => Data.Enabled = value;
    }
    
    static decimal XpPerAction
    {
        get => (decimal)Data.XpPerAction;
        set => Data.XpPerAction = (float)value;
    }

    static decimal SpeedIncrease
    {
        get => (decimal)Data.MovementSpeedIncMax;
        set => Data.MovementSpeedIncMax = (float)value;
    }
    
    static decimal SpeedIncreaseElite
    {
        get => (decimal)Data.MovementSpeedIncMaxElite;
        set => Data.MovementSpeedIncMaxElite = (float)value;
    }
    
    static decimal VolumeDecrease
    {
        get => (decimal)Data.MovementVolumeDecMax;
        set => Data.MovementVolumeDecMax = (float)value;
    }
    
    static decimal VolumeDecreaseElite
    {
        get => (decimal)Data.MovementVolumeDecMaxElite;
        set => Data.MovementVolumeDecMaxElite = (float)value;
    }
}